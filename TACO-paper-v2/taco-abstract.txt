Local assembly is the characteristic operation of the finite element method, which entails the execution of a problem-specific kernel for each element in the discretized problem domain. Since the domain can be huge, executing efficient kernels is fundamental. Their optimization is, however, challenging. The short trip counts of the loop nests and the complexity of mathematical expressions make it hard to determine a single sequence of successful transformations. Therefore, we present COFFEE, a compiler for local assembly kernels. COFFEE introduces domain-aware composable optimizations aimed at improving instruction-level parallelism, especially SIMD vectorization. Experiments show that significant performance improvement is achieved.

