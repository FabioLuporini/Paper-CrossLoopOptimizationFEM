\relax 
\citation{pyop2ics}
\citation{OP2-hydra}
\citation{fenics}
\citation{fluidity}
\citation{lizst}
\citation{firedrake}
\citation{nek5000}
\citation{firedrake}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}}
\citation{quadrature1}
\citation{quadrature2}
\citation{ufl}
\citation{uflacs}
\citation{fluidity}
\citation{mcfc}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces Local assembly code generated by Firedrake for a Helmholtz problem (2D mesh, Lagrange $p=1$ elements).}}{2}}
\newlabel{code:helmholtz}{{1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {II}Background}{2}}
\newlabel{sec:background}{{II}{2}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces Local assembly code generated by FFC for a Burgers problem (3D mesh, Lagrange $p=1$ elements).}}{2}}
\newlabel{code:burgers}{{2}{2}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces Local assembly code generated by Firedrake for a Helmholtz problem (2D mesh, Lagrange $p=1$ elements). The padding, data alignment and $licm$ optimizations are applied. Data alignment and padding relate to an AVX machine. In this specific case, sub-expressions invariant to $j$ are identical to those invariant to $k$; in general, this might not be the case.}}{3}}
\newlabel{code:helmholtz-licm}{{3}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {III}Code Transformations}{3}}
\newlabel{sec:code-transf}{{III}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-A}}Padding and Data Alignment}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-B}}Generalized Loop-invariant Code Motion}{3}}
\newlabel{sec:code-transf-licm}{{\unhbox \voidb@x \hbox {III-B}}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-C}}Domain-driven Vector-register Tiling}{3}}
\citation{ffc}
\citation{pyop2isc}
\newlabel{outer-product}{{1}{4}}
\newlabel{fig:vect-by-vect}{{\unhbox \voidb@x \hbox {III-C}}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Outer-product vectorization by permuting values in a vector register.}}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-D}}Code splitting}{4}}
\newlabel{fig:restore-layout}{{\unhbox \voidb@x \hbox {III-C}}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Restoring the storage layout after $op$-$vect$. The figure shows how 4$\times $4 elements in the top-left block of the stiffness matrix $A$ can be brought to their correct positions.}}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}The PyOP2 Compiler}{4}}
\newlabel{sec:pyop2-compiler}{{IV}{4}}
\citation{reguly-inter-kernel}
\citation{quadrature-cuda}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Local assembly code generated by Firedrake for a Helmholtz problem (2D mesh, Lagrange $p=2$ elements). The padding, data alignment, $licm$ and $op$-$vect$ optimizations are applied. Data alignment and padding relate to an AVX machine. The original size of the $j$-$k$ iteration space (i.e. before padding was applied) was 6$\times $6. In this example, the unroll-and-jam factor is 1.}}{5}}
\newlabel{code:helmholtz-opvect}{{4}{5}}
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Local assembly code generated by Firedrake for a Helmholtz problem (2D mesh, Lagrange $p=1$ elements). The padding, data alignment, $licm$ and $split$ optimizations are applied. Data alignment and padding relate to an AVX machine. In this specific case, the split factor is 2.}}{5}}
\newlabel{code:helmholtz-split}{{5}{5}}
\@writefile{lot}{\contentsline {table}{\numberline {I}{\ignorespaces Overview of code transformations for Firedrake-generated assembly kernels.}}{5}}
\newlabel{table:code-transformations}{{I}{5}}
\@writefile{loa}{\contentsline {algocf}{\numberline {6}{\ignorespaces The PyOP2 compiler.}}{6}}
\newlabel{algo:PyOP2Compiler}{{6}{6}}
\@writefile{loa}{\contentsline {algocf}{\numberline {7}{\ignorespaces The cost model is employed by the compiler to estimate the most suitable unroll-and-jam (when $op$-$vect$ is used) and split factors, avoiding the overhead of auto-tuning.}}{6}}
\newlabel{algo:applyCostModel}{{7}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {V}Performance Evaluation}{6}}
\newlabel{sec:perf-results}{{V}{6}}
\citation{nek5000-web-page}
\citation{Fenics}
\citation{fluidity_manual_v4}
\citation{FFC-TC}
\citation{Francis}
\citation{quadrature1}
\citation{quadrature1}
\citation{Markall20101815}
\citation{petsc-integration-gpu}
\citation{assembly-opencl}
\citation{Pueschel:05}
\citation{Spampinato:14}
\citation{op2-main}
\citation{pyop2isc}
\@writefile{toc}{\contentsline {section}{\numberline {VI}Related Work}{7}}
\newlabel{sec:related-work}{{VI}{7}}
\newlabel{fig_first_case}{{V}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Helmholtz}}{7}}
\newlabel{fig_first_case}{{V}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Advection-Diffusion}}{7}}
\bibstyle{plain}
\bibdata{biblio}
\bibcite{fluidity_manual_v4}{1}
\bibcite{lizst}{2}
\bibcite{FFC-TC}{3}
\bibcite{petsc-integration-gpu}{4}
\bibcite{assembly-opencl}{5}
\bibcite{fenics}{6}
\bibcite{pyop2isc}{7}
\bibcite{Markall20101815}{8}
\bibcite{op2-main}{9}
\bibcite{quadrature1}{10}
\bibcite{nek5000-web-page}{11}
\bibcite{Pueschel:05}{12}
\bibcite{Francis}{13}
\bibcite{nek5000}{14}
\bibcite{Spampinato:14}{15}
\newlabel{table:perf-results-licm-helmholtz}{{V}{8}}
\@writefile{lot}{\contentsline {table}{\numberline {II}{\ignorespaces Impact of generalized loop-invariant code motion ($licm$ column) on the Helmholtz problem, for three kind of elements belonging to the Conjugate Gradient family (triangle, tetrahedron, prism) and for the range of polynomial orders $p$ $\in $ $\delimiter "4266308 $1, 4$\delimiter "5267309 $. The column $licm$-$ap$ illustrates the combination of $licm$ with data alignment and padding.}}{8}}
\newlabel{fig_first_case}{{V}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Burgers}}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {VII}Conclusions}{8}}
\newlabel{sec:conclusions}{{VII}{8}}
\@writefile{toc}{\contentsline {section}{References}{8}}
